---
{% raw -%}
- name: include variable overrides
  include_vars: "{{ item }}"
  vars:
    params:
      - "vars/{{ ansible_distribution | lower }}-{{ ansible_distribution_release | lower }}.yml"
      - "vars/{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
      - "vars/{{ ansible_distribution | lower }}.yml"
      - "vars/{{ ansible_os_family | lower }}.yml"
      - "vars/default.yml"
  loop: "{{ q('first_found', params, skip=True) }}"
{%- endraw %}
  tags:
    - always

- name: install {{ cookiecutter.role_name }} packages
  become: yes
  package:
    name: "{{ '{{' }} {{ cookiecutter.role_name | replace('-', '_') }}_package_names {{ '}}' }}"
    state: "{{ '{{' }} {{ cookiecutter.role_name | replace('-', '_') }}_package_state {{ '}}' }}"

# - name: configure {{ cookiecutter.role_name }}
#   become: yes
#   template:
#     src: "{{ '{{' }} {{ cookiecutter.role_name | replace('-', '_') }}_conf_template {{ '}}' }}"
#     dest: "{{ '{{' }} {{ cookiecutter.role_name | replace('-', '_') }}_conf_path {{ '}}' }}"
#   notify:
#     - restart {{ cookiecutter.role_name }}
#
# - name: manage {{ cookiecutter.role_name }} services
#   become: yes
#   service:
{%- raw %}
#     name: "{{ item }}"
{%- endraw %}
#     state: "{{ '{{' }} {{ cookiecutter.role_name | replace('-', '_') }}_service_status {{ '}}' }}"
#   with_items: "{{ '{{' }} {{ cookiecutter.role_name | replace('-', '_') }}_service_names {{ '}}' }}"
